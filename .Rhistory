subtitle = NULL,
#legendVisible = F,
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-12,27),
xlab = bquote(~Log[2]~ 'fold change'),
labCol = 'black',
pCutoff = 0.05,
FCcutoff = 1.5,
pointSize = 1.5,
labSize = 3,
shape = c(4, 4, 4, 18),
col = c("grey","grey","grey","red3"),
colAlpha = 1)
EnhancedVolcano(Volcano_file,
lab = Volcano_file$gene,
title = 'Expresión diferencial Cáncer de mama',
titleLabSize = 35,
caption = paste0(nrow(toptable), ' Transcritos diferencialmente expresados'),
captionLabSize = 20,
axisLabSize = 23,
subtitle = NULL,
#legendVisible = F,
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-12,27),
xlab = bquote(~Log[2]~ 'fold change'),
labCol = 'black',
pCutoff = 0.05,
FCcutoff = 1.5,
pointSize = 1.5,
labSize = 3,
shape = c(4, 4, 4, 18),
col = c("grey","grey","grey","red3"),
colAlpha = 1)
library(EnhancedVolcano)
library(dplyr)
library(stringr)
file <- "z_TCGA_BRCA_DiffExp.tab.txt"
#Volcano_file <- read.table(file, header=F, sep = "\t", col.names = c("Uploaded_variation", "Location", "Allele", "Consequence", "IMPACT", "SYMBOL", "Feature_type", "Features(transcripts)", "Feature", "BIOTYPE", "Existing_variation"), skip = 1)
Volcano_file <- read.table(file, header=T, sep = "\t")
ids_to_volcano <- read.table("ids_diff_exp.txt", header=T, sep = "|")
Volcano_file$gene <- ids_to_volcano$Gene
pvalue_filtered<- na.omit(Volcano_file[Volcano_file$pvalue <= 0.05,])
downregulated_transcripts <- na.omit(pvalue_filtered[pvalue_filtered$log2FoldChange <= -1.5,])
upregulated_transcripts <-na.omit(pvalue_filtered[pvalue_filtered$log2FoldChange >= 1.5,])
make_ring
write.table(downregulated_transcripts, sep = "\t",
file = "C:/Users/adolf/AppData/Local/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/home/adolf/Scripts/downregulated_transcripts",
row.names = F, quote = F, col.names = F)
write.table(upregulated_transcripts, sep = "\t",
file = "C:/Users/adolf/AppData/Local/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/home/adolf/Scripts/upregulated_transcripts",
row.names = F, quote = F, col.names = F)
EnhancedVolcano(Volcano_file,
lab = Volcano_file$gene,
title = 'Expresión diferencial Cáncer de mama',
titleLabSize = 35,
caption = paste0(nrow(toptable), ' Transcritos diferencialmente expresados'),
captionLabSize = 20,
axisLabSize = 23,
subtitle = NULL,
#legendVisible = F,
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-12,27),
xlab = bquote(~Log[2]~ 'fold change'),
labCol = 'black',
pCutoff = 0.05,
FCcutoff = 1.5,
pointSize = 1.5,
labSize = 3,
shape = c(4, 4, 4, 18),
col = c("grey","grey","grey","red3"),
colAlpha = 1)
EnhancedVolcano(Volcano_file,
lab = Volcano_file$gene,
title = 'Expresión diferencial Cáncer de mama',
titleLabSize = 35,
caption = paste0(nrow(upregulated_transcripts)+nrow(downregulated_transcripts), ' Transcritos diferencialmente expresados'),
captionLabSize = 20,
axisLabSize = 23,
subtitle = NULL,
#legendVisible = F,
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-12,27),
xlab = bquote(~Log[2]~ 'fold change'),
labCol = 'black',
pCutoff = 0.05,
FCcutoff = 1.5,
pointSize = 1.5,
labSize = 3,
shape = c(4, 4, 4, 18),
col = c("grey","grey","grey","red3"),
colAlpha = 1)
library(EnhancedVolcano)
library(dplyr)
library(stringr)
file <- "z_TCGA_BRCA_DiffExp.tab.txt"
#Volcano_file <- read.table(file, header=F, sep = "\t", col.names = c("Uploaded_variation", "Location", "Allele", "Consequence", "IMPACT", "SYMBOL", "Feature_type", "Features(transcripts)", "Feature", "BIOTYPE", "Existing_variation"), skip = 1)
Volcano_file <- read.table(file, header=T, sep = "\t")
ids_to_volcano <- read.table("ids_diff_exp.txt", header=T, sep = "|")
Volcano_file$gene <- ids_to_volcano$Gene
pvalue_filtered<- na.omit(Volcano_file[Volcano_file$pvalue <= 0.05,])
downregulated_transcripts <- na.omit(pvalue_filtered[pvalue_filtered$log2FoldChange <= -1.5,])
upregulated_transcripts <-na.omit(pvalue_filtered[pvalue_filtered$log2FoldChange >= 1.5,])
make_ring
View(upregulated_transcripts)
View(downregulated_transcripts)
View(downregulated_transcripts)
View(upregulated_transcripts)
View(downregulated_transcripts)
View(upregulated_transcripts)
View(downregulated_transcripts)
library(VennDiagram)
file <- "Resume_PEV_5cN8XnXzquyzuf4B.txt.tsv"
#rs_inicial <- read.table(file, header=F, sep = "\t", col.names = c("Uploaded_variation", "Location", "Allele", "Consequence", "IMPACT", "SYMBOL", "Feature_type", "Features(transcripts)", "Feature", "BIOTYPE", "Existing_variation"), skip = 1)
rs_inicial <- read.table(file, header=T, sep = "\t")
nrow(subset(rs_inicial, grepl("lncRNA",rs_inicial$BIOTYPE)))
rs <-rs_inicial[c(1,2,4,5,6,8,10,13)]
subset(airquality, Temp > 80, select = c(Ozone, Temp))
subset(airquality, Day == 1, select = -Temp)
subset(airquality, select = Ozone:Wind)
grid.newpage()
draw.quad.venn(area1 = nrow(subset(rs_inicial, grepl("lncRNA",rs_inicial$BIOTYPE))), area2 = nrow(subset(rs_inicial, grepl("protein_coding",rs_inicial$BIOTYPE))),
area3 = nrow(subset(rs_inicial, grepl("RegulatoryFeature",rs_inicial$Feature_type))), area4 = nrow(subset(rs_inicial, grepl("intergenic_variant",rs_inicial$Consequence))),
n12 = nrow(subset(rs_inicial, grepl("lncRNA",rs_inicial$BIOTYPE) & grepl("protein_coding",rs_inicial$BIOTYPE))),
n23 = nrow(subset(rs_inicial, grepl("protein_coding",rs_inicial$BIOTYPE) & grepl("RegulatoryFeature",rs_inicial$Feature_type))), n13 = nrow(subset(rs_inicial,grepl("lncRNA",rs_inicial$BIOTYPE) & grepl("RegulatoryFeature",rs_inicial$Feature_type))),
n14 = nrow(subset(rs_inicial, grepl("lncRNA",rs_inicial$BIOTYPE) & grepl("intergenic_variant",rs_inicial$Consequence))),
n24 = nrow(subset(rs_inicial, grepl("protein_coding",rs_inicial$BIOTYPE) & grepl("intergenic_variant",rs_inicial$Consequence))),
n34 = nrow(subset(rs_inicial, grepl("RegulatoryFeature",rs_inicial$Feature_type) & grepl("intergenic_variant",rs_inicial$Consequence))),
n124 = nrow(subset(rs_inicial, grepl("lncRNA",rs_inicial$BIOTYPE) & grepl("protein_coding",rs_inicial$BIOTYPE) & grepl("intergenic_variant",rs_inicial$Consequence))),
n123 = nrow(subset(rs_inicial, grepl("lncRNA",rs_inicial$BIOTYPE) & grepl("protein_coding",rs_inicial$BIOTYPE) & grepl("RegulatoryFeature",rs_inicial$Feature_type))),
n134  = nrow(subset(rs_inicial, grepl("lncRNA",rs_inicial$BIOTYPE) & grepl("RegulatoryFeature",rs_inicial$Feature_type) & grepl("intergenic_variant",rs_inicial$Consequence))),
n234 = nrow(subset(rs_inicial, grepl("protein_coding",rs_inicial$BIOTYPE) & grepl("RegulatoryFeature",rs_inicial$Feature_type) & grepl("intergenic_variant",rs_inicial$Consequence))),
n1234 = nrow(subset(rs_inicial, grepl("lncRNA",rs_inicial$BIOTYPE) & grepl("protein_coding",rs_inicial$BIOTYPE) & grepl("RegulatoryFeature",rs_inicial$Feature_type) & grepl("intergenic_variant",rs_inicial$Consequence))),
category = c("lncRNAs", "Genes codificantes", "Características regulatorias", "Intergénicas"), lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid", "red"))
rs <-rs_inicial[c(1,2,4,5,6,8,10,13)]
rs <-rs_inicial[c(1,2,4,5,6,8,10,13),]
View(rs)
rs <-rs_inicial[c(1,2,4,5,6,8,10,13)]
library(EnhancedVolcano)
library(dplyr)
library(stringr)
file <- "z_TCGA_BRCA_DiffExp.tab.txt"
#Volcano_file <- read.table(file, header=F, sep = "\t", col.names = c("Uploaded_variation", "Location", "Allele", "Consequence", "IMPACT", "SYMBOL", "Feature_type", "Features(transcripts)", "Feature", "BIOTYPE", "Existing_variation"), skip = 1)
Volcano_file <- read.table(file, header=T, sep = "\t")
ids_to_volcano <- read.table("ids_diff_exp.txt", header=T, sep = "|")
Volcano_file$gene <- ids_to_volcano$Gene
pvalue_filtered<- na.omit(Volcano_file[Volcano_file$pvalue <= 0.05,])
downregulated_transcripts <- na.omit(pvalue_filtered[pvalue_filtered$log2FoldChange <= -1.5,])
upregulated_transcripts <-na.omit(pvalue_filtered[pvalue_filtered$log2FoldChange >= 1.5,])
make_ring
write.table(downregulated_transcripts, sep = "\t",
file = "C:/Users/adolf/AppData/Local/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/home/adolf/Scripts/downregulated_transcripts",
row.names = F, quote = F, col.names = F)
write.table(upregulated_transcripts, sep = "\t",
file = "C:/Users/adolf/AppData/Local/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/home/adolf/Scripts/upregulated_transcripts",
row.names = F, quote = F, col.names = F)
EnhancedVolcano(Volcano_file,
lab = Volcano_file$gene,
title = 'Expresión diferencial Cáncer de mama',
titleLabSize = 35,
caption = paste0(nrow(upregulated_transcripts)+nrow(downregulated_transcripts), ' Transcritos diferencialmente expresados'),
captionLabSize = 20,
axisLabSize = 23,
subtitle = NULL,
#legendVisible = F,
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-12,27),
xlab = bquote(~Log[2]~ 'fold change'),
labCol = 'black',
pCutoff = 0.05,
FCcutoff = 1.5,
pointSize = 1.5,
labSize = 3,
shape = c(4, 4, 4, 18),
col = c("grey","grey","grey","red3"),
colAlpha = 1)
genes_up <- upregulated_transcripts$gene
summarise(genes_up)
levels(genes_up)
count(levels(genes_up))
levels(genes_up)
nrow(levels(genes_up))
EnhancedVolcano(Volcano_file,
lab = Volcano_file$gene,
title = 'Expresión diferencial Cáncer de mama',
titleLabSize = 35,
caption = paste('7473 Genes diferencialmente expresados'),
captionLabSize = 20,
axisLabSize = 23,
subtitle = NULL,
#legendVisible = F,
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-12,27),
xlab = bquote(~Log[2]~ 'fold change'),
labCol = 'black',
pCutoff = 0.05,
FCcutoff = 1.5,
pointSize = 1.5,
labSize = 3,
shape = c(4, 4, 4, 18),
col = c("grey","grey","grey","red3"),
colAlpha = 1)
EnhancedVolcano(Volcano_file,
lab = Volcano_file$gene,
title = 'Expresión diferencial Cáncer de mama',
titleLabSize = 35,
caption = paste('7.473 Genes diferencialmente expresados'),
captionLabSize = 20,
axisLabSize = 23,
subtitle = NULL,
#legendVisible = F,
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-12,27),
xlab = bquote(~Log[2]~ 'fold change'),
labCol = 'black',
pCutoff = 0.05,
FCcutoff = 1.5,
pointSize = 1.5,
labSize = 3,
shape = c(4, 4, 4, 18),
col = c("grey","grey","grey","red3"),
colAlpha = 1)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TCGAbiolinks")
pwd
wd
library(TCGAbiolinks)
metadata <- colDataPrepare(c("TCGA-OR-A5K3-01A","C3N-00321-01"))
View(metadata)
metadata <- colDataPrepare(c("TCGA-A8-A097", "TCGA-E9-A22D"))
View(metadata)
metadata <- colDataPrepare(c("TCGA-AR-A5QM-01A-11R-A27Q-07", "TCGA-AC-A3BB-01A-21R-A19W-07"))
View(metadata)
get_IDs("TCGA-AC-A3BB-01A-21R-A19W-07	")
get_IDs("TCGA-AC-A3BB-01A-21R-A19W-07")
get_IDs(metadata)
View(metadata)
get_IDs(metadata$barcode)
get_IDs(metadata$barcode)
dataSubt <- TCGAquery_subtype(tumor = "lgg")
View(dataSubt)
dataSubt <- TCGAquery_subtype(tumor = "brca")
View(dataSubt)
summary <- getSampleFilesSummary("TCGA-BRCA")
View(summary)
query <- GDCquery(project = "TCGA-GBM",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "HTSeq - Counts",
barcode = c("TCGA-14-0736-02A-01R-2005-01", "TCGA-06-0211-02A-02R-2005-01"))
results <- getResults(query)
View(results)
getManifest(query)
Manifest<-getManifest(query)
View(Manifest)
View(results)
library(TCGAbiolinks)
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "HTSeq - Counts")
results <- getResults(query)
bar <- results$cases
S <- TCGAquery_SampleTypes(bar,"TP")
S2 <- TCGAquery_SampleTypes(bar,"NB")
# Retrieve multiple tissue types  NOT FROM THE SAME PATIENTS
SS <- TCGAquery_SampleTypes(bar,c("TP","NB"))
# Retrieve multiple tissue types  FROM THE SAME PATIENTS
SSS <- TCGAquery_MatchedCoupledSampleTypes(bar,c("NT","TP"))
query2 <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "miRNA Expression Quantification",
workflow.type = "HTSeq - Counts",
barcode = SSS)
results2 <- getResults(query)
View(results2)
View(results2)
# You can define a list of samples to query and download providing relative TCGA barcodes.
listSamples <- c("TCGA-E9-A1NG-11A-52R-A14M-07","TCGA-BH-A1FC-11A-32R-A13Q-07")
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Gene expression",
data.type = "Gene expression quantification",
experimental.strategy = "RNA-Seq",
platform = "Illumina HiSeq",
file.type = "results",
barcode = listSamples,
legacy = TRUE)
View(query)
# Download a list of barcodes with platform IlluminaHiSeq_RNASeqV2
GDCdownload(query)
# Download a list of barcodes with platform IlluminaHiSeq_RNASeqV2
GDCdownload(query)
library(TCGAbiolinks)
# You can define a list of samples to query and download providing relative TCGA barcodes.
listSamples <- c("TCGA-E9-A1NG-11A-52R-A14M-07","TCGA-BH-A1FC-11A-32R-A13Q-07")
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Gene expression",
data.type = "Gene expression quantification",
experimental.strategy = "RNA-Seq",
platform = "Illumina HiSeq",
file.type = "results",
barcode = listSamples,
legacy = TRUE)
# Download a list of barcodes with platform IlluminaHiSeq_RNASeqV2
GDCdownload(query)
# Download a list of barcodes with platform IlluminaHiSeq_RNASeqV2
GDCdownload(query)
# Download a list of barcodes with platform IlluminaHiSeq_RNASeqV2
GDCdownload(query)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Gene expression",
data.type = "Gene expression quantification",
experimental.strategy = "RNA-Seq",
platform = "Illumina HiSeq",
file.type = "results",
barcode = listSamples,
legacy = F)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene expression quantification",
experimental.strategy = "RNA-Seq",
platform = "Illumina HiSeq",
file.type = "results",
barcode = listSamples,
legacy = F)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
experimental.strategy = "RNA-Seq",
platform = "Illumina HiSeq",
file.type = "results",
barcode = listSamples,
legacy = F)
results <- getResults(query)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
experimental.strategy = "RNA-Seq",
file.type = "results",
barcode = listSamples,
legacy = F)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
experimental.strategy = "RNA-Seq",
workflow.type = "HTSeq - Counts",
file.type = "results",
barcode = listSamples,
legacy = F)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "transcriptome Profiling",
data.type = "Gene Expression Quantification",
experimental.strategy = "RNA-Seq",
workflow.type = "HTSeq - Counts",
file.type = "results",
barcode = listSamples,
legacy = F)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
experimental.strategy = "RNA-Seq",
workflow.type = "HTSeq - Counts",
file.type = "results",
barcode = listSamples,
legacy = F)
# You can define a list of samples to query and download providing relative TCGA barcodes.
listSamples <- c("TCGA-E9-A1NG-11A-52R-A14M-07")
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
experimental.strategy = "RNA-Seq",
workflow.type = "HTSeq - Counts",
file.type = "results",
barcode = listSamples,
legacy = F)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
experimental.strategy = "RNA-Seq",
workflow.type = "HTSeq - Counts",
file.type = "results",
barcode = "TCGA-E9-A1NG-11A-52R-A14M-07",
legacy = F)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
#experimental.strategy = "RNA-Seq",
workflow.type = "HTSeq - Counts",
file.type = "results",
barcode = "TCGA-E9-A1NG-11A-52R-A14M-07",
legacy = F)
query <- GDCquery(project = "TARGET-AML",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "HTSeq - Counts",
barcode = c("TARGET-20-PADZCG-04A-01R","TARGET-20-PARJCR-09A-01R"))
# Download a list of barcodes with platform IlluminaHiSeq_RNASeqV2
GDCdownload(query)
# Download a list of barcodes with platform IlluminaHiSeq_RNASeqV2
GDCdownload(query)
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
experimental.strategy = "RNA-Seq",
workflow.type = "HTSeq - Counts",
file.type = "results",
barcode = "TCGA-E9-A1NG-11A-52R-A14M-07")
# Query platform Illumina HiSeq with a list of barcode
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
experimental.strategy = "RNA-Seq",
workflow.type = "HTSeq - Counts",
barcode = "TCGA-E9-A1NG-11A-52R-A14M-07")
View(query)
View(results)
View(query[[1]][[1]])
query2 <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "miRNA Expression Quantification",
experimental.strategy = "miRNA-Seq",
barcode = "TCGA-E9-A1NG-11A-52R-A14M-07")
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "HTSeq - Counts")
results2 <- getResults(query)
View(results2)
View(query)
query2 <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "miRNA Expression Quantification",
experimental.strategy = "miRNA-Seq",
barcode = "TCGA-AO-A0JF-01A-11R-A057-13")
View(query2)
View(query2[[1]][[1]])
query2 <- GDCquery(project = "TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "miRNA Expression Quantification",
experimental.strategy = "miRNA-Seq")
results2 <- getResults(query)
View(query2)
View(query2[[1]][[1]])
results2 <- getResults(query2)
View(results2)
# Download a list of barcodes with platform IlluminaHiSeq_RNASeqV2
GDCdownload(query2)
query <- GDCquery(project = "TCGA-ACC",
data.category =  "Copy number variation",
legacy = TRUE,
file.type = "hg19.seg",
barcode = c("TCGA-OR-A5LR-01A-11D-A29H-01", "TCGA-OR-A5LJ-10A-01D-A29K-01"))
# data will be saved in  GDCdata/TCGA-ACC/legacy/Copy_number_variation/Copy_number_segmentation
GDCdownload(query, method = "api")
library(TCGAbiolinks)
query <- GDCquery(project = "TCGA-ACC",
data.category =  "Copy number variation",
legacy = TRUE,
file.type = "hg19.seg",
barcode = c("TCGA-OR-A5LR-01A-11D-A29H-01", "TCGA-OR-A5LJ-10A-01D-A29K-01"))
# data will be saved in  GDCdata/TCGA-ACC/legacy/Copy_number_variation/Copy_number_segmentation
GDCdownload(query, method = "api")
# data will be saved in  GDCdata/TCGA-ACC/legacy/Copy_number_variation/Copy_number_segmentation
GDCdownload(query, method = "client")
# data will be saved in  GDCdata/TCGA-ACC/legacy/Copy_number_variation/Copy_number_segmentation
GDCdownload(query, method = "client")
# data will be saved in  GDCdata/TCGA-ACC/legacy/Copy_number_variation/Copy_number_segmentation
GDCdownload(query, method = "client")
query <- GDCquery(project = "TCGA-ACC",
data.category =  "Copy number variation",
legacy = TRUE,
file.type = "hg19.seg",
barcode = c("TCGA-OR-A5LR-01A-11D-A29H-01", "TCGA-OR-A5LJ-10A-01D-A29K-01"))
library(TCGAbiolinks)
query <- GDCquery(project = "TCGA-ACC",
data.category =  "Copy number variation",
legacy = TRUE,
file.type = "hg19.seg",
barcode = c("TCGA-OR-A5LR-01A-11D-A29H-01", "TCGA-OR-A5LJ-10A-01D-A29K-01"))
View(query)
View(query[[1]][[1]])
# data will be saved in  GDCdata/TCGA-ACC/legacy/Copy_number_variation/Copy_number_segmentation
GDCdownload(query, method = "client")
library(TCGAbiolinks)
query <- GDCquery(project = "TCGA-ACC",
data.category =  "Copy number variation",
legacy = TRUE,
file.type = "hg19.seg",
barcode = c("TCGA-OR-A5LR-01A-11D-A29H-01", "TCGA-OR-A5LJ-10A-01D-A29K-01"))
# data will be saved in  GDCdata/TCGA-ACC/legacy/Copy_number_variation/Copy_number_segmentation
GDCdownload(query, method = "client")
